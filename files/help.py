from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import  ReplyKeyboardMarkup, KeyboardButton

from dispatcher import dp
from files.authorization import cancel


class Support(StatesGroup):
    problem = State()
    description = State()


@dp.message_handler(text='–î–æ–ø–æ–º–æ–≥–∞üÜò')
async def register_start(message: types.Message):
    await message.answer("–ü—Ä–∏–≤—ñ—Ç! –í–≤–µ–¥–∏ –∑ —á–∏–º –ø–æ–≤'—è–∑–∞–Ω–∞ —Ç–≤–æ—è –ø—Ä–æ–±–ª–µ–º–∞: ",
                         reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).row(KeyboardButton("üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é")))
    await Support.problem.set()


@dp.message_handler(state=Support.problem)
async def surname_input(message: types.Message, state: FSMContext):
    if message.text == "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é":
        await cancel(message, state)
        return
    await state.update_data(surname=message.text)
    await message.answer("–û–ø–∏—à–∏ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–≤–Ω—ñ—Å—Ç—é:")
    await Support.description.set()


@dp.message_handler(state=Support.description)
async def name_input(message: types.Message, state: FSMContext):
    if message.text == "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é":
        await cancel(message, state)
        return
    await state.update_data(name=message.text)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –ø–æ –±–∞—Ç—å–∫–æ–≤—ñ:")
    await UserRegister.patronymic.set()


@dp.message_handler(state=UserRegister.patronymic)
async def patron_input(message: types.Message, state: FSMContext):
    if message.text == "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é":
        await cancel(message, state)
        return
    await state.update_data(patronymic=message.text)
    await message.answer("–í–≤–µ–¥—ñ—Ç—å –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω—É:")
    await UserRegister.phone_number.set()