from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher.filters.state import StatesGroup, State
from aiogram.types import  ReplyKeyboardMarkup, KeyboardButton

from dispatcher import dp, factory
from files.authorization import cancel, my_profile, register_start

from files.bot import kb


class Support(StatesGroup):
    problem = State()
    description = State()


@dp.message_handler(text='–î–æ–ø–æ–º–æ–≥–∞üÜò')
async def helps(message: types.Message):
    if my_profile(message.from_user.id):
        await message.answer("–ü—Ä–∏–≤—ñ—Ç! –í–≤–µ–¥–∏ –∑ —á–∏–º –ø–æ–≤'—è–∑–∞–Ω–∞ —Ç–≤–æ—è –ø—Ä–æ–±–ª–µ–º–∞: ",
                             reply_markup=ReplyKeyboardMarkup(resize_keyboard=True).row(
                                 KeyboardButton("üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é")))
        await Support.problem.set()
    else:
        await message.answer("–£ –≤–∞—Å –Ω–µ–º–∞—î –ø—Ä–æ—Ñ—ñ–ª—é –∑–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å –±—É–¥—å –ª–∞—Å–∫–∞")
        await register_start(message, "help")


@dp.message_handler(state=Support.problem)
async def problem_input(message: types.Message, state: FSMContext):
    if message.text == "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é":
        await cancel(message, state)
        return
    await state.update_data(problem=message.text)
    await message.answer("–û–ø–∏—à–∏ –ø—Ä–æ–±–ª–µ–º—É –ø–æ–≤–Ω—ñ—Å—Ç—é:")
    await Support.description.set()


@dp.message_handler(state=Support.description)
async def description_input(message: types.Message, state: FSMContext):
    if message.text == "üîô –ü–æ–≤–µ—Ä–Ω—É—Ç–∏—Å—å –≤ –≥–æ–ª–æ–≤–Ω–µ –º–µ–Ω—é":
        await cancel(message, state)
        return
    await state.update_data(description=message.text)
    new_support = await state.get_data()
    sql = f"INSERT INTO Support (Problem, Description, idProfile) VALUES (?, ?, ?);"
    data = (new_support["problem"], new_support["description"], message.from_user.id)
    factory.cursor.execute(sql, data)
    factory.connector.commit()
    await message.answer("–î—è–∫—É—î–º–æ, –ø—ñ—Å–ª—è –≤–∏—Ä—ñ—à–µ–Ω–Ω—è –ø—Ä–æ–±–ª–µ–º–∏ –º–∏ –∑–∞—Ç–µ–ª–µ—Ñ–æ–Ω—É—î–º–æ –≤–∞–º‚úÖ", reply_markup=kb)
    await state.finish()


